{"version":3,"sources":["Modules/CityComponent.js","Modules/WeatherInfoComponent.js","App.js","index.js"],"names":["WeatherLogo","styled","img","ChooseCityLabel","span","SearchBox","form","Anvesh","div","CityComponent","props","src","onSubmit","fetchWeather","placeholder","onChange","e","updateCity","target","value","type","href","WeatherInfoIcons","Sunset","Sunrise","Humidity","Wind","Pressure","WeatherCondition","Condition","Location","WeatherInfoLabel","WeatherInfoContainer","InfoContainer","InfoIcon","InfoLabel","WeatherInfoComponent","name","WeatherComponent","timestamp","weather","isDay","icon","includes","Math","floor","main","temp","description","sys","country","Date","getHours","getMinutes","humidity","wind","speed","pressure","Container","AppLabel","App","useState","city","updateWeather","a","preventDefault","Axios","get","response","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRACMA,EAAcC,IAAOC,IAAV,qFAMXC,EAAkBF,IAAOG,KAAV,6GAOfC,EAAYJ,IAAOK,KAAV,2hBA4BTC,EAASN,IAAOO,IAAV,qEA2BGC,EAtBO,SAACC,GACrB,OACE,qCACE,cAACV,EAAD,CAAaW,IAAI,4BACjB,cAACR,EAAD,yCAEA,eAACE,EAAD,CAAWO,SAAUF,EAAMG,aAA3B,UACE,uBACEC,YAAY,4BACZC,SAAU,SAACC,GAAD,OAAON,EAAMO,WAAWD,EAAEE,OAAOC,UAE7C,wBAAQC,KAAK,SAAb,uBAGF,eAACb,EAAD,qCAC0B,IACxB,mBAAGc,KAAK,iCAAR,iCC7DKC,EAAmB,CAC9BC,OAAQ,mBACRC,QAAS,mBACTC,SAAU,uBACVC,KAAM,mBACNC,SAAU,wBAGNC,EAAmB3B,IAAOO,IAAV,uKAQhBqB,EAAY5B,IAAOG,KAAV,6GAQTJ,EAAcC,IAAOC,IAAV,oFAKX4B,EAAW7B,IAAOG,KAAV,sEAKR2B,EAAmB9B,IAAOG,KAAV,uJAShB4B,EAAuB/B,IAAOO,IAAV,mKASpByB,EAAgBhC,IAAOO,IAAV,qJAQb0B,EAAWjC,IAAOC,IAAV,6DAKRiC,EAAYlC,IAAOG,KAAV,qLAWTgC,EAAuB,SAAC1B,GAC5B,OACE,eAACuB,EAAD,WACE,cAACC,EAAD,CAAUvB,IAAKW,EAAiBZ,EAAM2B,QACtC,eAACF,EAAD,WACGzB,EAAMS,MACP,+BAAOT,EAAM2B,cAqCNC,EAhCU,SAAC5B,GAAW,IAAD,YAGjB6B,EAFTC,EAAY9B,EAAZ8B,QACFC,EAAK,OAAGD,QAAH,IAAGA,GAAH,UAAGA,EAASA,QAAQ,GAAGE,YAAvB,aAAG,EAA0BC,SAAS,KAMjD,OACE,qCACE,eAACf,EAAD,WACE,eAACC,EAAD,WACE,yCAAUe,KAAKC,OAAa,OAAPL,QAAO,IAAPA,GAAA,UAAAA,EAASM,YAAT,eAAeC,MAAO,KAA3C,YAA6D,IAD/D,mBAEQP,QAFR,IAEQA,OAFR,EAEQA,EAASA,QAAQ,GAAGQ,gBAE5B,cAAC,EAAD,CAAarC,IAAI,+BAEnB,cAACmB,EAAD,2BAAcU,QAAd,IAAcA,OAAd,EAAcA,EAASH,KAAvB,mBAA+BG,QAA/B,IAA+BA,GAA/B,UAA+BA,EAASS,WAAxC,aAA+B,EAAcC,WAC7C,cAACnB,EAAD,2BACA,eAACC,EAAD,WACE,cAAC,EAAD,CACEK,KAAMI,EAAQ,SAAW,UACzBtB,OAnBSoB,EAmBK,OAACC,QAAD,IAACA,OAAD,EAACA,EAASS,IAAIR,EAAQ,SAAW,WAlB/C,GAAN,OAAU,IAAIU,KAAiB,IAAZZ,GAAkBa,WAArC,YAAmD,IAAID,KACzC,IAAZZ,GACAc,iBAkBE,cAAC,EAAD,CAAsBhB,KAAK,WAAWlB,MAAK,OAAEqB,QAAF,IAAEA,GAAF,UAAEA,EAASM,YAAX,aAAE,EAAeQ,WAC5D,cAAC,EAAD,CAAsBjB,KAAK,OAAOlB,MAAK,OAAEqB,QAAF,IAAEA,GAAF,UAAEA,EAASe,YAAX,aAAE,EAAeC,QACxD,cAAC,EAAD,CAAsBnB,KAAK,WAAWlB,MAAK,OAAEqB,QAAF,IAAEA,GAAF,UAAEA,EAASM,YAAX,aAAE,EAAeW,kB,iBC5G9DC,EAAYzD,IAAOO,IAAV,oQAaTmD,EAAW1D,IAAOO,IAAV,uFAKCP,IAAOO,IAAV,sEA0BGoD,MAtBf,WACE,MAA2BC,qBAA3B,mBAAOC,EAAP,KAAa7C,EAAb,KACA,EAAiC4C,qBAAjC,mBAAOrB,EAAP,KAAgBuB,EAAhB,KACMlD,EAAY,uCAAG,WAAOG,GAAP,eAAAgD,EAAA,6DACnBhD,EAAEiD,iBADiB,SAEIC,IAAMC,IAAN,4DACgCL,EADhC,kBA5BX,qCA0BO,OAEbM,EAFa,OAKnBL,EAAcK,EAASC,MALJ,2CAAH,sDAOlB,OACE,eAACX,EAAD,WACE,cAACC,EAAD,2BACCnB,EACC,cAAC,EAAD,CAAkBA,QAASA,IAE3B,cAAC,EAAD,CAAevB,WAAYA,EAAYJ,aAAcA,QCxC7DyD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c2834f4d.chunk.js","sourcesContent":["import styled from \"styled-components\";\nconst WeatherLogo = styled.img`\n  width: 140px;\n  height: 140px;\n  margin: 40px auto;\n`;\n\nconst ChooseCityLabel = styled.span`\n  color: black;\n  font-size: 18px;\n  font-weight: bold;\n  margin: 10px auto;\n`;\n\nconst SearchBox = styled.form`\n  display: flex;\n  flex-direction: row;\n  border: black solid 1px;\n  border-radius: 2px;\n  color: black;\n  font-size: 18px;\n  font-weight: bold;\n  margin: 20px auto;\n  & input {\n    padding: 10px;\n    font-size: 14px;\n    border: none;\n    outline: none;\n    font-weight: bold;\n    width: 180px;\n  }\n  & button {\n    padding: 10px;\n    font-size: 14px;\n    color: white;\n    background-color: black;\n    border: none;\n    outline: none;\n    font-weight: bold;\n    cursor: pointer;\n  }\n`;\nconst Anvesh = styled.div`\n  font-size: 9px;\n  font-weight: bold;\n`;\n\nconst CityComponent = (props) => {\n  return (\n    <>\n      <WeatherLogo src=\"./icons/perfect-day.svg\" />\n      <ChooseCityLabel>Find Weather of your City.</ChooseCityLabel>\n\n      <SearchBox onSubmit={props.fetchWeather}>\n        <input\n          placeholder=\"Type your city name here.\"\n          onChange={(e) => props.updateCity(e.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </SearchBox>\n\n      <Anvesh>\n        This web-App is made by{\" \"}\n        <a href=\"https://www.bit.ly/anveshdange\">Anvesh Dange</a>\n      </Anvesh>\n    </>\n  );\n};\n\nexport default CityComponent;\n","import styled from \"styled-components\";\n\nexport const WeatherInfoIcons = {\n  Sunset: \"./icons/temp.svg\",\n  Sunrise: \"./icons/temp.svg\",\n  Humidity: \"./icons/humidity.svg\",\n  Wind: \"./icons/wind.svg\",\n  Pressure: \"./icons/pressure.svg\",\n};\n\nconst WeatherCondition = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 100%;\n  justify-content: space-between;\n  margin: 13px auto;\n`;\nconst Condition = styled.span`\n  margin: 20px auto;\n  font-size: 14px;\n  & span {\n    font-size: 28px;\n  }\n`;\n\nconst WeatherLogo = styled.img`\n  width: 100px;\n  height: 100px;\n  margin: 5px auto;\n`;\nconst Location = styled.span`\n  font-size: 28px;\n  font-weight: bold;\n`;\n\nconst WeatherInfoLabel = styled.span`\n  font-size: 14px;\n  font-weight: bold;\n  margin: 20px 25px 10px;\n  margin: 20px;\n  text-align: start;\n  width: 90%;\n`;\n\nconst WeatherInfoContainer = styled.div`\n  display: flex;\n  width: 90%;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nconst InfoContainer = styled.div`\n  display: flex;\n  margin: 5px 10px;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nconst InfoIcon = styled.img`\n  width: 36px;\n  height: 36px;\n`;\n\nconst InfoLabel = styled.span`\n  display: flex;\n  flex-direction: column;\n  font-size: 14px;\n  margin: 15px;\n  &span {\n    font-size: 12px;\n    text-transform: capitalize;\n  }\n`;\n\nconst WeatherInfoComponent = (props) => {\n  return (\n    <InfoContainer>\n      <InfoIcon src={WeatherInfoIcons[props.name]} />\n      <InfoLabel>\n        {props.value}\n        <span>{props.name}</span>\n      </InfoLabel>\n    </InfoContainer>\n  );\n};\nconst WeatherComponent = (props) => {\n  const { weather } = props;\n  const isDay = weather?.weather[0].icon?.includes(\"d\");\n  const getTime = (timestamp) => {\n    return `${new Date(timestamp * 1000).getHours()}:${new Date(\n      timestamp * 1000\n    ).getMinutes()}`;\n  };\n  return (\n    <>\n      <WeatherCondition>\n        <Condition>\n          <span>{`${Math.floor(weather?.main?.temp - 273)} Â°C`}</span>{\" \"}\n          {`| ${weather?.weather[0].description}`}\n        </Condition>\n        <WeatherLogo src=\"./icons/perfect-day.svg\" />\n      </WeatherCondition>\n      <Location>{`${weather?.name},${weather?.sys?.country}`}</Location>\n      <WeatherInfoLabel>Weather Info</WeatherInfoLabel>\n      <WeatherInfoContainer>\n        <WeatherInfoComponent\n          name={isDay ? \"Sunset\" : \"Sunrise\"}\n          value={getTime(weather?.sys[isDay ? \"sunset\" : \"sunrise\"])}\n        />\n        <WeatherInfoComponent name=\"Humidity\" value={weather?.main?.humidity} />\n        <WeatherInfoComponent name=\"Wind\" value={weather?.wind?.speed} />\n        <WeatherInfoComponent name=\"Pressure\" value={weather?.main?.pressure} />\n      </WeatherInfoContainer>\n    </>\n  );\n};\n\nexport default WeatherComponent;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport CityComponent from \"./Modules/CityComponent\";\nimport WeatherComponent from \"./Modules/WeatherInfoComponent\";\nimport Axios from \"axios\";\n\nconst API_KEY = \"d12633dce2e5671587e8c7ee32e86964\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  align-items: center;\n  box-shadow: 0 3px 6px 0 #555;\n  padding: 20px 10px;\n  border-radius: 4px;\n  width: 380px;\n  background: white;\n  font-family: Montserrat;\n`;\n\nconst AppLabel = styled.div`\n  color: black;\n  font-size: 18px;\n  font-weight: bold;\n`;\nconst Anvesh = styled.div`\n  font-size: 12px;\n  font-weight: bold;\n`;\nfunction App() {\n  const [city, updateCity] = useState();\n  const [weather, updateWeather] = useState();\n  const fetchWeather = async (e) => {\n    e.preventDefault();\n    const response = await Axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`\n    );\n    updateWeather(response.data);\n  };\n  return (\n    <Container>\n      <AppLabel>Weather App </AppLabel>\n      {weather ? (\n        <WeatherComponent weather={weather} />\n      ) : (\n        <CityComponent updateCity={updateCity} fetchWeather={fetchWeather} />\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}